<Application x:Class="AnimatedButton_Stetsenko.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AnimatedButton_Stetsenko"
             StartupUri="MainWindow.xaml">
	<Application.Resources>
		<GradientStopCollection x:Key="MyGlassGradientStopsResource">
			<GradientStop Color="WhiteSmoke" Offset="0.2" />
			<GradientStop Color="Transparent" Offset="0.4" />
			<GradientStop Color="WhiteSmoke" Offset="0.5" />
			<GradientStop Color="Transparent" Offset="0.75" />
			<GradientStop Color="WhiteSmoke" Offset="0.9" />
			<GradientStop Color="Transparent" Offset="1" />
		</GradientStopCollection>
		<LinearGradientBrush x:Key="MyGlassBrushResource" StartPoint="0,0" EndPoint="1,1" Opacity="0.75" 
							 GradientStops="{StaticResource MyGlassGradientStopsResource}" />
		
		<!-- градієнтна лінійна заливка для фону кнопки -->
		<LinearGradientBrush x:Key="GrayBlueGradientBrush" StartPoint="0,0" EndPoint="1,0">
			<GradientStop Color="DarkGreen" Offset="0" />
			<GradientStop Color="#0af769" Offset="0.5" />
			<GradientStop Color="DarkGreen" Offset="1" />
		</LinearGradientBrush>
		<!-- Стиль книпки -->
		<Style TargetType="{x:Type Button}">
			<Setter Property="Background" Value="{StaticResource GrayBlueGradientBrush}" />
			<Setter Property="Width" Value="100" />
			<Setter Property="Margin" Value="15" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">

							<!--Зовнішній прямокутник із закругленими кутами. -->
							<Rectangle x:Name="outerRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
									   Stroke="{TemplateBinding Background}" RadiusX="20" RadiusY="20" StrokeThickness="5" Fill="Transparent" />

							<!-- Внутрішній прямокутник із закругленими кутами. -->
							<Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="Transparent" 
									   StrokeThickness="20" Fill="{TemplateBinding Background}" RadiusX="20" RadiusY="20" />

							<!-- Скляний прямокутник -->
							<Rectangle x:Name="glassCube" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" StrokeThickness="2" 
									   RadiusX="10" RadiusY="10" Opacity="0" Fill="{StaticResource MyGlassBrushResource}" 
									   RenderTransformOrigin="0.5,0.5">
								<Rectangle.Stroke>
									<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
										<LinearGradientBrush.GradientStops>
											<GradientStop Offset="0.0" Color="LightBlue" />
											<GradientStop Offset="1.0" Color="Gray" />
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Rectangle.Stroke>
								<!--Ці трансформації не мають ефекту, оскільки вони тут оголошені. Причина, що перетворюється, включає цілі для анімації  -->
								<Rectangle.RenderTransform>
									<TransformGroup>
										<ScaleTransform />
										<RotateTransform />
									</TransformGroup>
								</Rectangle.RenderTransform>
								<!-- A BevelBitmapEffect застосовується, щоб надати кнопці "скошений" вигляд. -->
								<Rectangle.BitmapEffect>
									<BevelBitmapEffect />
								</Rectangle.BitmapEffect>
							</Rectangle>

							<DockPanel Name="myContentPresenterDockPanel">
								<ContentPresenter x:Name="myContentPresenter" Margin="20" Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" />
							</DockPanel>
						</Grid>
						<ControlTemplate.Triggers>
							<!-- Встановіть властивості, коли вказівник миші знаходиться над кнопкою. -->
							<Trigger Property="IsMouseOver" Value="True">
								<!-- Нижче наведено три параметри властивості, які виникають, коли виконується умова (користувач наводить курсор миші на кнопку).  -->
								<!-- Змінити колір зовнішнього прямокутника, коли користувач наводить на нього мишу. -->
								<Setter Property ="Rectangle.Stroke" TargetName="outerRectangle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
								<!-- Встановлює непрозорість скла на 1, тому скло «з’являється», коли користувач наводить на нього мишу. -->
								<Setter Property="Rectangle.Opacity" Value="1" TargetName="glassCube" />
								<!-- Робить текст трохи розмитим, ніби ви дивитеся на нього крізь розмите скло. -->
								<Setter Property="ContentPresenter.BitmapEffect" TargetName="myContentPresenter">
									<Setter.Value>
										<BlurBitmapEffect Radius="1" />
									</Setter.Value>
								</Setter>
							</Trigger>
							<!-- Встановити властивості, коли кнопка має фокус. -->
							<Trigger Property="IsFocused" Value="true">
								<Setter Property="Rectangle.Opacity" Value="1" TargetName="glassCube" />
								<Setter Property="Rectangle.Stroke" TargetName="outerRectangle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
								<Setter Property="Rectangle.Opacity" Value="1" TargetName="glassCube" />
							</Trigger>

							<!--  Анімація, яка починається, коли миша входить і залишає кнопку. -->
							<EventTrigger RoutedEvent="Mouse.MouseEnter">
								<EventTrigger.Actions>
									<BeginStoryboard Name="mouseEnterBeginStoryboard">
										<Storyboard>
											<!-- Ця анімація змушує скляний прямокутник зменшуватися в напрямку X. -->
											<DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty= "(Rectangle.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" By="-0.1" Duration="0:0:0.5" />
											<!-- Ця анімація змушує скляний прямокутник зменшуватися в напрямку Y. -->
											<DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty= "(Rectangle.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" By="-0.1" Duration="0:0:0.5" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger.Actions>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseLeave">
								<EventTrigger.Actions>
									<!-- Зупинення розкадровки повертає всі властивості анімації до стандартних. -->
									<StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
								</EventTrigger.Actions>
							</EventTrigger>
							<!--  Анімація запускається, коли натискається кнопка, спричиняючи обертання скла. -->
							<EventTrigger RoutedEvent="Button.Click">
								<EventTrigger.Actions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[1].(RotateTransform.Angle)" By="360" Duration="0:0:0.5" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger.Actions>
							</EventTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Application.Resources>
</Application>